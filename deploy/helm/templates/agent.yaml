apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: {{ .Values.driver }}
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
  - Persistent
  - Ephemeral
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}-agent
  namespace: {{ .Values.namespace }}
{{ include "local.labels" . | indent 2 }}
    app.kubernetes.io/component: {{ .Values.name }}-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ .Values.name }}-agent
  template:
    metadata:
{{ include "local.labels" . | indent 6 }}
        app.kubernetes.io/component: {{ .Values.name }}-agent
    spec:
      tolerations:
      - operator: Exists
      serviceAccount: {{ .Values.name }}
      priorityClassName: system-node-critical
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: driver-registrar
        image: {{ .Values.global.RegistryLibraryURL }}/{{ .Values.images.registrar.image }}:{{ .Values.images.registrar.tag }}
        imagePullPolicy: Always
        args:
        - "--v=5"
        - "--csi-address=/csi/csi.sock"
        - "--kubelet-registration-path={{ .Values.agent.kubelet_dir }}/plugins/{{ .Values.driver }}/csi.sock"
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: TZ
          value: Asia/Shanghai
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 20m
            memory: 50Mi
        volumeMounts:
          - name: plugin-dir
            mountPath: /csi
          - name: registration-dir
            mountPath: /registration
      - name: csi-plugin
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        image: {{ .Values.global.RegistryDevURL }}/{{ .Values.images.csi_hostpath.image }}:{{ .Values.images.csi_hostpath.tag }}
        imagePullPolicy: Always
        args:
        - csi
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--nodeID=$(KUBE_NODE_NAME)"
        - "--driver={{ .Values.driver }}"
        - "--driver-mode=agent"
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix://var/lib/kubelet/plugins/{{ .Values.driver }}/csi.sock
        - name: TZ
          value: Asia/Shanghai
        - name: ISSUE_ORPHANED_POD
          value: "true"
        - name: ISSUE_BLOCK_REFERENCE
          value: "true"
        - name: ISSUE_MESSAGE_FILE
          value: "true"
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: pods-mount-dir
          mountPath: /var/lib/kubelet
          mountPropagation: "Bidirectional"
        - mountPath: /dev
          mountPropagation: "HostToContainer"
          name: host-dev
        - mountPath: /opt/csi-hostpath/
          mountPropagation: "Bidirectional"
          name: localvolume
        - mountPath: /var/log
          name: host-log
        - mountPath: /host_sys
          mountPropagation: Bidirectional
          name: sys
      volumes:
      - name: host-dev
        hostPath:
          path: /dev
      - name: sys
        hostPath:
          path: "/sys"
      - name: localvolume
        hostPath:
          path: /opt/csi-hostpath/
          type: DirectoryOrCreate
      - name: plugin-dir
        hostPath:
          path: {{ .Values.agent.kubelet_dir }}/plugins/{{ .Values.driver }}
          type: DirectoryOrCreate
      - name: registration-dir
        hostPath:
          path: {{ .Values.agent.kubelet_dir }}/plugins_registry
          type: DirectoryOrCreate
      - name: pods-mount-dir
        hostPath:
          path: {{ .Values.agent.kubelet_dir }}
          type: Directory
      - name: host-log
        hostPath:
          path: /var/log
          type: DirectoryOrCreate
  updateStrategy:
    type: RollingUpdate

